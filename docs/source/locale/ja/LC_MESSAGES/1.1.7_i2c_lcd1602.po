# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SunFounder
# This file is distributed under the same license as the SunFounder Davinci
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Davinci Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-20 18:20+0800\n"
"PO-Revision-Date: 2021-05-27 17:55+0800\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: \n"
"Language-Team: \n"
"X-Generator: Poedit 2.4.3\n"

#: ../1.1.7_i2c_lcd1602.rst:2
msgid "1.1.7 I2C LCD1602"
msgstr "1.1.7 I2C LCD1602"

#: ../1.1.7_i2c_lcd1602.rst:5
msgid "Introduction"
msgstr "前書き"

#: ../1.1.7_i2c_lcd1602.rst:7
msgid ""
"LCD1602 is a character type liquid crystal display, which can display 32 "
"(16*2) characters at the same time."
msgstr ""
"LCD1602は文字型液晶ディスプレイで、32（16 * 2）文字を同時に表示できる。"

#: ../1.1.7_i2c_lcd1602.rst:11
msgid "Components"
msgstr "部品"

#: ../1.1.7_i2c_lcd1602.rst:16
msgid "Principle"
msgstr "原理"

#: ../1.1.7_i2c_lcd1602.rst:18
msgid "**I2C LCD1602**"
msgstr "**I2C LCD1602**"

#: ../1.1.7_i2c_lcd1602.rst:20
msgid ""
"As we all know, though LCD and some other displays greatly enrich the "
"man-machine interaction, they share a common weakness. When they are "
"connected to a controller, multiple IOs will be occupied of the "
"controller which has no so many outer ports. Also it restricts other "
"functions of the controller. Therefore, LCD1602 with an I2C bus is "
"developed to solve the problem."
msgstr ""
"ご存知のように、LCDやその他のディスプレイはマンマシンの相互作用を大幅に強"
"化するが、共通の弱点を共有している。それらがコントローラーに接続される"
"と、外部ポートがあまりないコントローラーの複数のIOが占用される。また、コ"
"ントローラーの他の機能も制限される。したがって、この問題を解決するため"
"に、I2Cバスを備えたLCD1602が開発された。"

#: ../1.1.7_i2c_lcd1602.rst:29
msgid "**I2C communication**"
msgstr "**I2C通信**"

#: ../1.1.7_i2c_lcd1602.rst:31
msgid ""
"I2C(Inter-Integrated Circuit) bus is a very popular and powerful bus for "
"communication between a master device (or master devices) and a single "
"or multiple slave devices."
msgstr ""
"I2C（アイ・スクエアド・シー）バスは、一つマスターデバイス（または複数のマ"
"スターデバイス）と単一または複数のスレーブデバイス間の通信用の非常に強力"
"なバスである。"

#: ../1.1.7_i2c_lcd1602.rst:35
msgid ""
"I2C main controller can be used to control IO expander, various sensors, "
"EEPROM, ADC/DAC and so on. All of these are controlled only by the two "
"pins of host, the serial data (SDA1) line and the serial clock "
"line(SCL1)."
msgstr ""
"I2Cメインコントローラーを使用して、IOエクスパンダー、各種センサー、"
"EEPROM、ADC/DACなどを制御できる。これらはすべて、ホストの2つのピン、シリ"
"アルデータ（SDA1）ラインとシリアルクロックライン（SCL1）によってのみ制御"
"される。"

#: ../1.1.7_i2c_lcd1602.rst:41
msgid "Schematic Diagram"
msgstr "回路図"

#: ../1.1.7_i2c_lcd1602.rst:44
msgid "T-Board Name"
msgstr "Tボード名"

#: ../1.1.7_i2c_lcd1602.rst:44
msgid "physical"
msgstr "physical"

#: ../1.1.7_i2c_lcd1602.rst:45
msgid "SDA1"
msgstr "SDA1"

#: ../1.1.7_i2c_lcd1602.rst:45
msgid "Pin 3"
msgstr "Pin 3"

#: ../1.1.7_i2c_lcd1602.rst:46
msgid "SCL1"
msgstr "SCL1"

#: ../1.1.7_i2c_lcd1602.rst:46
msgid "Pin 5"
msgstr "Pin 5"

#: ../1.1.7_i2c_lcd1602.rst:53
msgid "Experimental Procedures"
msgstr "実験手順"

#: ../1.1.7_i2c_lcd1602.rst:55
msgid "**Step 1:** Build the circuit."
msgstr "**ステップ1：**回路を作る。"

#: ../1.1.7_i2c_lcd1602.rst:60
msgid ""
"**Step 2**: Setup I2C (see :ref:`I2C Configuration`. If you have set "
"I2C, skip this step.)"
msgstr ""
"**ステップ2：**I2C設定（付録を参照してください。I2Cを設定している場合は、"
"この手順をスキップしてください。）"

#: ../1.1.7_i2c_lcd1602.rst:63
msgid "For C Language Users"
msgstr "C言語ユーザー向け"

#: ../1.1.7_i2c_lcd1602.rst:65 ../1.1.7_i2c_lcd1602.rst:124
msgid "**Step 3:** Change directory."
msgstr "**ステップ3：**ディレクトリを変更する。"

#: ../1.1.7_i2c_lcd1602.rst:71
msgid "**Step 4:** Compile."
msgstr "**ステップ4：**コンパイルする。"

#: ../1.1.7_i2c_lcd1602.rst:77
msgid "**Step 5:** Run."
msgstr "**ステップ5：**実行する。"

#: ../1.1.7_i2c_lcd1602.rst:83 ../1.1.7_i2c_lcd1602.rst:136
msgid ""
"After the code runs, you can see ”Greetings”,”From SunFounder” "
"displaying on the LCD."
msgstr ""
"コードの実行後、LCDに「Greetings」、「SunFounderから」が表示される。"

#: ../1.1.7_i2c_lcd1602.rst:85 ../1.1.7_i2c_lcd1602.rst:138
msgid "**Code**"
msgstr "**コード**"

#: ../1.1.7_i2c_lcd1602.rst:87
msgid ""
"`1.1.7_Lcd1602.c <https://github.com/sunfounder/davinci-kit-for-"
"raspberry-pi/blob/master/c/1.1.7/1.1.7_Lcd1602.c>`_"
msgstr ""
"`1.1.7_Lcd1602.c <https://github.com/sunfounder/davinci-kit-for-"
"raspberry-pi/blob/master/c/1.1.7/1.1.7_Lcd1602.c>`_"

#: ../1.1.7_i2c_lcd1602.rst:89 ../1.1.7_i2c_lcd1602.rst:162
msgid "**Code Explanation**"
msgstr "**コードの説明**"

#: ../1.1.7_i2c_lcd1602.rst:100
msgid ""
"These functions are used to control I2C LCD1602 open source code. They "
"allow us to easily use I2C LCD1602. Among these functions, init() is "
"used for initialization, clear() is used to clear the screen, write() is "
"used to write what is displayed, and other functions support the above "
"functions."
msgstr ""
"これらの関数は、I2C LCD1602オープンソースコードを制御するために使用され"
"る。これにより、I2C LCD1602を簡単に使用できる。これらの関数の中で、"
"init（）は初期化に使用され、clear（）は画面の消去に使用され、write（）は"
"表示内容の書き込みに使用され、他の関数は上記の関数をサポートする。"

#: ../1.1.7_i2c_lcd1602.rst:107
msgid ""
"This function initializes the I2C system with the specified device "
"symbol. The prototype of the function:"
msgstr ""
"この関数は指定されたデバイスシンボルでI2Cシステムを初期化する。関数のプロ"
"トタイプ："

#: ../1.1.7_i2c_lcd1602.rst:113
msgid ""
"Parameters devId is the address of the I2C device, it can be found "
"through the i2cdetect command(see Appendix) and the devId of I2C LCD1602 "
"is generally 0x27."
msgstr ""
"パラメーターdevIdはI2Cデバイスのアドレスであり、i2cdetectコマンド（付録を"
"参照）で見つけることができ、I2C LCD1602のdevIdは通常0x27である。"

#: ../1.1.7_i2c_lcd1602.rst:119
msgid ""
"In this function, data[] is the character to be printed on the LCD, and "
"the parameters x and y determine the printing position (line y+1, column "
"x+1 is the starting position of the character to be printed)."
msgstr ""
"この関数では、data []はLCDにプリントされる文字であり、パラメーターxとyは"
"プリントの位置を決定する（行y + 1、列x + 1はプリントされる文字の開始位置"
"である）。"

#: ../1.1.7_i2c_lcd1602.rst:122
msgid "For Python Language Users"
msgstr "Python言語ユーザー向け"

#: ../1.1.7_i2c_lcd1602.rst:130
msgid "**Step 4:** Run."
msgstr "**ステップ4：**実行。"

#: ../1.1.7_i2c_lcd1602.rst:168
msgid ""
"This file is an open source file for controlling I2C LCD1602. It allows "
"us to easily use I2C LCD1602."
msgstr ""
"このファイルはI2C LCD1602を制御するためのオープンソースファイルである。"
"I2C LCD1602を簡単に使用できる。"

#: ../1.1.7_i2c_lcd1602.rst:174
msgid ""
"The function initializes the I2C system with the designated device "
"symbol. The first parameter is the address of the I2C device, which can "
"be detected through the i2cdetect command (see Appendix for details). "
"The address of I2C LCD1602 is generally 0x27."
msgstr ""
"この関数は指定されたデバイスシンボルでI2Cシステムを初期化する。最初のパラ"
"メーターはI2Cデバイスのアドレスで、i2cdetectコマンドで検出できる（詳細に"
"ついては付録を参照してください）。I2C LCD1602のアドレスは通常0x27である。"

#: ../1.1.7_i2c_lcd1602.rst:180
msgid ""
"Within this function, 'Greetings!! ' is the character to be printed on "
"the Row 0+1, column 0+1 on LCD. Now you can see “Greetings! From "
"SunFounder” displayed on the LCD."
msgstr ""
"この関数内で、「Greetings !! 'は、LCDの行0+1、列0+1にプリントされる文字で"
"ある。これで、“Greetings!が見えるSunFounder」がLCDに表示される。"

#: ../1.1.7_i2c_lcd1602.rst:184
msgid "Phenomenon Picture"
msgstr "現象画像"
