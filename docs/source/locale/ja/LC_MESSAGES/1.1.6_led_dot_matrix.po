# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SunFounder
# This file is distributed under the same license as the SunFounder Davinci
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Davinci Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-20 18:20+0800\n"
"PO-Revision-Date: 2021-05-27 17:47+0800\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: \n"
"Language-Team: \n"
"X-Generator: Poedit 2.4.3\n"

#: ../1.1.6_led_dot_matrix.rst:2
msgid "1.1.6 LED Dot Matrix"
msgstr "1.1.6 LEDドットマトリックス"

#: ../1.1.6_led_dot_matrix.rst:5
msgid "Introduction"
msgstr "前書き"

#: ../1.1.6_led_dot_matrix.rst:7
msgid ""
"As the name suggests, an LED dot matrix is a matrix composed of LEDs. "
"The lighting up and dimming of the LEDs formulate different characters "
"and patterns."
msgstr ""
"名前が示すように、LEDドットマトリックスはLEDで構成されるマトリックスであ"
"る。LEDの点灯と減光は、さまざまな文字とパターンを形成する。"

#: ../1.1.6_led_dot_matrix.rst:12
msgid "Components"
msgstr "部品"

#: ../1.1.6_led_dot_matrix.rst:17
msgid "Principle"
msgstr "原理"

#: ../1.1.6_led_dot_matrix.rst:19 ../1.1.6_led_dot_matrix.rst:105
#: ../1.1.6_led_dot_matrix.rst:119
msgid "**LED Dot Matrix**"
msgstr "**LEDドットマトリックス**"

#: ../1.1.6_led_dot_matrix.rst:21
msgid ""
"Generally, LED dot matrix can be categorized into two types: common "
"cathode (CC) and common anode (CA). They look much alike, but internally "
"the difference lies. You can tell by test. A CA one is used in this kit. "
"You can see 788BS labeled at the side."
msgstr ""
"一般に、LEDドットマトリックスは、カソードコモン（CC）とアノードコモン"
"（CA）の2つのタイプに分類できる。見た目は似ているが、内部的には違いがあ"
"る。テストを行うとすぐに分かる。このキットではCAが使用される。側面に788BS"
"というラベルが付いている。"

#: ../1.1.6_led_dot_matrix.rst:26
msgid ""
"See the figure below. The pins are arranged at the two ends at the back. "
"Take the label side for reference: pins on this end are pin 1-8, and oh "
"the other are pin 9-16."
msgstr ""
"下の図を参照してください。ピンは背面の両端に配置されている。ラベル側を例"
"にする:この端のピンはピン1〜8、もう一端はピン9〜16である。"

#: ../1.1.6_led_dot_matrix.rst:30
msgid "The external view:"
msgstr "外部ビュー："

#: ../1.1.6_led_dot_matrix.rst:35
msgid ""
"Below the figures show their internal structure. You can see in a CA LED "
"dot matrix, ROW represents the anode of the LED, and COL is cathode; "
"it's contrary for a CC one. One thing in common: for both types, pin 13, "
"3, 4, 10, 6, 11, 15, and 16 are all COL, when pin 9, 14, 8, 12, 1, 7, 2, "
"and 5 are all ROW. If you want to turn on the first LED at the top left "
"corner, for a CA LED dot matrix, just set pin 9 as High and pin 13 as "
"Low, and for a CC one, set pin 13 as High and pin 9 as Low. If you want "
"to light up the whole first column, for CA, set pin 13 as Low and ROW 9, "
"14, 8, 12, 1, 7, 2, and 5 as High, when for CC, set pin 13 as High and "
"ROW 9, 14, 8, 12, 1, 7, 2, and 5 as Low. Consider the following figures "
"for better understanding."
msgstr ""
"図の下に内部構造を示している。CA LEDドットマトリックスが見える。ROWはLED"
"のアノードを表し、COLはカソードを表す。CCの場合は逆である。共通点が1つあ"
"る：両方のタイプで、ピン13、3、4、10、6、11、15、および16はすべてCOLであ"
"る。ピン9、14、8、12、1、7、2、および5がすべてROWである。左上隅の最初の"
"LEDをオンにする場合、CA LEDドットマトリックスに対して、ピン9をHigh、ピン"
"13をLowに設定し、CC 1に対して、ピン13をHighに、ピン9をLowに設定する。CAの"
"最初の列全体を点灯させる場合は、ピン13をLowに、行9、14、8、12、1、7、2、"
"および5をHighに設定するCCの場合、ピン13をHighに、行9、14、8、12、1、7、"
"2、および5をLowに設定する。理解を深めるために、次の図を検討してください。"

#: ../1.1.6_led_dot_matrix.rst:47
msgid "The internal view:"
msgstr "内部ビュー："

#: ../1.1.6_led_dot_matrix.rst:51
msgid "Pin numbering corresponding to the above rows and columns:"
msgstr "上記の行と列に対応するピン番号："

#: ../1.1.6_led_dot_matrix.rst:54
msgid "**COL**"
msgstr "**COL**"

#: ../1.1.6_led_dot_matrix.rst:54 ../1.1.6_led_dot_matrix.rst:56
#: ../1.1.6_led_dot_matrix.rst:57 ../1.1.6_led_dot_matrix.rst:119
msgid "**1**"
msgstr "**1**"

#: ../1.1.6_led_dot_matrix.rst:54 ../1.1.6_led_dot_matrix.rst:56
#: ../1.1.6_led_dot_matrix.rst:57 ../1.1.6_led_dot_matrix.rst:119
msgid "**2**"
msgstr "**2**"

#: ../1.1.6_led_dot_matrix.rst:54 ../1.1.6_led_dot_matrix.rst:55
#: ../1.1.6_led_dot_matrix.rst:56 ../1.1.6_led_dot_matrix.rst:105
msgid "**3**"
msgstr "**3**"

#: ../1.1.6_led_dot_matrix.rst:54 ../1.1.6_led_dot_matrix.rst:55
#: ../1.1.6_led_dot_matrix.rst:56 ../1.1.6_led_dot_matrix.rst:105
msgid "**4**"
msgstr "**4**"

#: ../1.1.6_led_dot_matrix.rst:54 ../1.1.6_led_dot_matrix.rst:56
#: ../1.1.6_led_dot_matrix.rst:57 ../1.1.6_led_dot_matrix.rst:119
msgid "**5**"
msgstr "**5**"

#: ../1.1.6_led_dot_matrix.rst:54 ../1.1.6_led_dot_matrix.rst:55
#: ../1.1.6_led_dot_matrix.rst:56 ../1.1.6_led_dot_matrix.rst:105
msgid "**6**"
msgstr "**6**"

#: ../1.1.6_led_dot_matrix.rst:54 ../1.1.6_led_dot_matrix.rst:56
#: ../1.1.6_led_dot_matrix.rst:57 ../1.1.6_led_dot_matrix.rst:119
msgid "**7**"
msgstr "**7**"

#: ../1.1.6_led_dot_matrix.rst:54 ../1.1.6_led_dot_matrix.rst:56
#: ../1.1.6_led_dot_matrix.rst:57 ../1.1.6_led_dot_matrix.rst:119
msgid "**8**"
msgstr "**8**"

#: ../1.1.6_led_dot_matrix.rst:55 ../1.1.6_led_dot_matrix.rst:57
msgid "**Pin No.**"
msgstr "**ピン番号**"

#: ../1.1.6_led_dot_matrix.rst:55 ../1.1.6_led_dot_matrix.rst:105
msgid "**13**"
msgstr "**13**"

#: ../1.1.6_led_dot_matrix.rst:55 ../1.1.6_led_dot_matrix.rst:105
msgid "**10**"
msgstr "**10**"

#: ../1.1.6_led_dot_matrix.rst:55 ../1.1.6_led_dot_matrix.rst:105
msgid "**11**"
msgstr "**11**"

#: ../1.1.6_led_dot_matrix.rst:55 ../1.1.6_led_dot_matrix.rst:105
msgid "**15**"
msgstr "**15**"

#: ../1.1.6_led_dot_matrix.rst:55 ../1.1.6_led_dot_matrix.rst:105
msgid "**16**"
msgstr "**16**"

#: ../1.1.6_led_dot_matrix.rst:56
msgid "**ROW**"
msgstr "**行**"

#: ../1.1.6_led_dot_matrix.rst:57 ../1.1.6_led_dot_matrix.rst:119
msgid "**9**"
msgstr "**9**"

#: ../1.1.6_led_dot_matrix.rst:57 ../1.1.6_led_dot_matrix.rst:119
msgid "**14**"
msgstr "**14**"

#: ../1.1.6_led_dot_matrix.rst:57 ../1.1.6_led_dot_matrix.rst:119
msgid "**12**"
msgstr "**12**"

#: ../1.1.6_led_dot_matrix.rst:60
msgid ""
"In addition, two 74HC595 chips are used here. One is to control the rows "
"of the LED dot matrix while the other, the columns."
msgstr ""
"さらに、2つの74HC595チップがここで使用されている。1つはLEDドットマトリッ"
"クスの行を制御し、もう1つは列を制御する。"

#: ../1.1.6_led_dot_matrix.rst:64
msgid "Schematic Diagram"
msgstr "回路図"

#: ../1.1.6_led_dot_matrix.rst:67
msgid "T-Board Name"
msgstr "Tボード名"

#: ../1.1.6_led_dot_matrix.rst:67
msgid "physical"
msgstr "physical"

#: ../1.1.6_led_dot_matrix.rst:67
msgid "wiringPi"
msgstr "wiringPi"

#: ../1.1.6_led_dot_matrix.rst:67
msgid "BCM"
msgstr "BCM"

#: ../1.1.6_led_dot_matrix.rst:68
msgid "GPIO17"
msgstr "GPIO17"

#: ../1.1.6_led_dot_matrix.rst:68
msgid "Pin 11"
msgstr "Pin 11"

#: ../1.1.6_led_dot_matrix.rst:68
msgid "0"
msgstr "0"

#: ../1.1.6_led_dot_matrix.rst:68
msgid "17"
msgstr "17"

#: ../1.1.6_led_dot_matrix.rst:69
msgid "GPIO18"
msgstr "GPIO18"

#: ../1.1.6_led_dot_matrix.rst:69
msgid "Pin 12"
msgstr "Pin 12"

#: ../1.1.6_led_dot_matrix.rst:69
msgid "1"
msgstr "1"

#: ../1.1.6_led_dot_matrix.rst:69
msgid "18"
msgstr "18"

#: ../1.1.6_led_dot_matrix.rst:70
msgid "GPIO27"
msgstr "GPIO27"

#: ../1.1.6_led_dot_matrix.rst:70
msgid "Pin 13"
msgstr "Pin 13"

#: ../1.1.6_led_dot_matrix.rst:70
msgid "2"
msgstr "2"

#: ../1.1.6_led_dot_matrix.rst:70
msgid "27"
msgstr "27"

#: ../1.1.6_led_dot_matrix.rst:76
msgid "Experimental Procedures"
msgstr "実験手順"

#: ../1.1.6_led_dot_matrix.rst:78
msgid ""
"**Step 1:** Build the circuit. Since the wiring is complicated, let's "
"make it step by step. First, insert the T-Cobbler, the LED dot matrix "
"and two 74HC595 chips into breadboard. Connect the 3.3V and GND of the T-"
"Cobbler to holes on the two sides of the board, then hook up pin16 and "
"10 of the two 74HC595 chips to VCC, pin 13 and pin 8 to GND."
msgstr ""
"**ステップ1：**回路を作る。配線が複雑なので、段階的に作りましょう。まず、"
"T-Cobbler、LEDドットマトリックス、および2つの74HC595チップをブレッドボー"
"ドに挿入する。T-Cobblerの3.3Vと接地をボードの両側の穴に接続し、2つの"
"74HC595チップのピン16と10をVCCに、ピン13とピン8を接地に接続する。"

#: ../1.1.6_led_dot_matrix.rst:85
msgid "In the Fritzing image above, the side with label is at the bottom."
msgstr "上のFritzing画像では、ラベルのある側が下にある。"

#: ../1.1.6_led_dot_matrix.rst:89
msgid ""
"**Step 2:** Connect pin 11 of the two 74HC595 together, and then to "
"GPIO27; then pin 12 of the two chips, and to GPIO18; next, pin 14 of the "
"74HC595 on the left side to GPIO17 and pin 9 to pin 14 of the second "
"74HC595."
msgstr ""
"**ステップ2：**2つの74HC595のピン11を一緒に接続し、GPIO27に接続する。次"
"に、2つのチップのピン12を一緒に接続し、GPIO18に接続する。それから左側の"
"74HC595のピン14をGPIO17に、ピン9を2番目の74HC595のピン14に接続する。"

#: ../1.1.6_led_dot_matrix.rst:97
msgid ""
"**Step 3:** The 74HC595 on the right side is to control columns of the "
"LED dot matrix. See the table below for the mapping. Therefore, Q0-Q7 "
"pins of the 74HC595 are mapped with pin 13, 3, 4, 10, 6, 11, 15, and 16 "
"respectively."
msgstr ""
"**ステップ3：**右側の74HC595は、LEDドットマトリックスの列を制御する。マッ"
"ピングについては、以下の表を参照してください。したがって、74HC595のQ0〜Q7"
"ピンは、それぞれピン13、3、4、10、6、11、15、および16にマップされる。"

#: ../1.1.6_led_dot_matrix.rst:103 ../1.1.6_led_dot_matrix.rst:117
msgid "**74HC595**"
msgstr "**74HC595**"

#: ../1.1.6_led_dot_matrix.rst:103 ../1.1.6_led_dot_matrix.rst:117
msgid "**Q0**"
msgstr "**Q0**"

#: ../1.1.6_led_dot_matrix.rst:103 ../1.1.6_led_dot_matrix.rst:117
msgid "**Q1**"
msgstr "**Q1**"

#: ../1.1.6_led_dot_matrix.rst:103 ../1.1.6_led_dot_matrix.rst:117
msgid "**Q2**"
msgstr "**Q2**"

#: ../1.1.6_led_dot_matrix.rst:103 ../1.1.6_led_dot_matrix.rst:117
msgid "**Q3**"
msgstr "**Q3**"

#: ../1.1.6_led_dot_matrix.rst:103 ../1.1.6_led_dot_matrix.rst:117
msgid "**Q4**"
msgstr "**Q4**"

#: ../1.1.6_led_dot_matrix.rst:103 ../1.1.6_led_dot_matrix.rst:117
msgid "**Q5**"
msgstr "**Q5**"

#: ../1.1.6_led_dot_matrix.rst:103 ../1.1.6_led_dot_matrix.rst:117
msgid "**Q6**"
msgstr "**Q6**"

#: ../1.1.6_led_dot_matrix.rst:103 ../1.1.6_led_dot_matrix.rst:117
msgid "**Q7**"
msgstr "**Q7**"

#: ../1.1.6_led_dot_matrix.rst:111
msgid ""
"**Step 4:** Now connect the ROWs of the LED dot matrix. The 74HC595 on "
"the left controls ROW of the LED dot matrix. See the table below for the "
"mapping. We can see, Q0-Q7 of the 74HC595 on the left are mapped with "
"pin 9, 14, 8, 12, 1, 7, 2, and 5 respectively."
msgstr ""
"**ステップ4：**次に、LEDドットマトリックスの行を接続する。左側の74HC595は"
"LEDドットマトリックスの行を制御する。マッピングについては、以下の表を参照"
"してください。左側の74HC595のQ0〜Q7は、それぞれピン9、14、8、12、1、7、"
"2、および5にマッピングされていることは分かった。"

#: ../1.1.6_led_dot_matrix.rst:125
msgid "For C Language Users"
msgstr "C言語ユーザー向け"

#: ../1.1.6_led_dot_matrix.rst:127
msgid "**Step 5:** Go to the folder of code."
msgstr "**ステップ5：**コードのフォルダーに移動する。"

#: ../1.1.6_led_dot_matrix.rst:133
msgid "**Step 6:** Compile."
msgstr "**ステップ6：**コンパイルする。"

#: ../1.1.6_led_dot_matrix.rst:139
msgid "**Step 7:** Run."
msgstr "**ステップ7：**実行する。"

#: ../1.1.6_led_dot_matrix.rst:145 ../1.1.6_led_dot_matrix.rst:279
msgid ""
"After the code runs, the LED dot matrix lights up and out row by row and "
"column by column."
msgstr ""
"コードの実行後、LEDドットマトリックスが行ごとに、列ごとに点灯したり消灯し"
"たりする。"

#: ../1.1.6_led_dot_matrix.rst:148 ../1.1.6_led_dot_matrix.rst:281
msgid "**Code**"
msgstr "**コード**"

#: ../1.1.6_led_dot_matrix.rst:214 ../1.1.6_led_dot_matrix.rst:339
msgid "**Code Explanation**"
msgstr "**コードの説明**"

#: ../1.1.6_led_dot_matrix.rst:221
msgid ""
"The array code_H represents the elements of the LED dot matrix row, and "
"the array code_L refers to the elements of the column. When characters "
"are displayed, an element in row and one in column are acquired and "
"assigned to the two HC595 chips respectively. Thus a pattern is shown on "
"the LED dot matrix. Take the first number of code_H, 0x01 and the first "
"number of code_L, 0x00 as examples."
msgstr ""
"配列code_HはLEDドットマトリックス行の要素を表し、配列code_Lは列の要素を表"
"す。文字が表示されると、行の要素と列の要素が取得され、それぞれ2つのHC595"
"チップに割り当てられる。したがって、パターンはLEDドットマトリックスに表示"
"される。例として、code_Hの最初の数字0x01とcode_Lの最初の数字0x00を取り上"
"げる。"

#: ../1.1.6_led_dot_matrix.rst:224 ../1.1.6_led_dot_matrix.rst:349
msgid ""
"0x01 converted to binary becomes 00000001; 0x00 converted to binary "
"becomes 0000 0000."
msgstr ""
"二進法に変換された0x01は00000001になり、二進法に変換された0x00は0000 0000"
"になる。"

#: ../1.1.6_led_dot_matrix.rst:226
msgid ""
"In this kit, common anode LED dot matrix display is applied, so only the "
"eight LEDs in the eighth row light up. When the conditions that code H "
"is 0xff and code_L is 0x7f are met simultaneously, these 8 LEDs in the "
"first column are lit."
msgstr ""
"このキットでは、アノードコモンLEDドットマトリックスディスプレイが適用され"
"るため、8列目の8つのLEDのみが点灯する。コードHが0xffで、code_Lが0x7fであ"
"るという条件が同時に満たされると、最初の列のこれら8つのLEDが点灯する。"

#: ../1.1.6_led_dot_matrix.rst:241
msgid ""
"Write the value of dat to pin SDI of the HC595 bit by bit. SRCLK's "
"initial value was set to 0, and here it's set to 1, which is to generate "
"a rising edge pulse, then shift the pinSDI(DS) date to shift "
"register. .. code-block:: c"
msgstr ""
"datの値をHC595のSDIピンにビット単位で書き込む。SRCLKの初期値は元々に0に設"
"定されていたが、ここでは1に設定されている。これは、立ち上がりエッジパルス"
"を生成し、ピンSDI(DS)の日付をシフトレジスタにシフトする。.. code-block:: "
"c"

#: ../1.1.6_led_dot_matrix.rst:247
msgid "void hc595_out(){"
msgstr "void hc595_out(){"

#: ../1.1.6_led_dot_matrix.rst:245
msgid "digitalWrite(RCLK, 1); delay(1); digitalWrite(RCLK, 0);"
msgstr "digitalWrite(RCLK, 1); delay(1); digitalWrite(RCLK, 0);"

#: ../1.1.6_led_dot_matrix.rst:249
msgid ""
"RCLK's initial value was set to 0, and here it's set to 1, which is to "
"generate a rising edge, then shift data from shift register to storage "
"register."
msgstr ""
"RCLKの初期値は元々に0に設定されていたが、ここでは1に設定されている。これ"
"は、立ち上がりエッジパルスを生成し、データーをシフトレジスタからストレー"
"ジレジスターにシフトする。"

#: ../1.1.6_led_dot_matrix.rst:262
msgid ""
"In this loop, these 20  elements in the two arrays, code_L and code_H "
"will be uploaded to the two 74HC595 chip one by one. Then call the "
"function, hc595_out() to shift data from shift register to storage "
"register."
msgstr ""
"このループでは、2つの配列code_Lおよびcode_Hのこれらの20個の要素が2つの"
"74HC595チップに1つずつアップロードされる。次に、関数hc595_out（）を呼び出"
"して、データをシフトレジスタからストレージレジスタにシフトする。"

#: ../1.1.6_led_dot_matrix.rst:265
msgid "For Python Language Users"
msgstr "Python言語ユーザー向け"

#: ../1.1.6_led_dot_matrix.rst:267
msgid "**Step 5:** Get into the folder of code."
msgstr "**ステップ5：**コードのフォルダーに入る。"

#: ../1.1.6_led_dot_matrix.rst:273
msgid "**Step 6:** Run."
msgstr "**ステップ6：**実行する。"

#: ../1.1.6_led_dot_matrix.rst:346
msgid ""
"The array code_H represents the elements of the matix row, and the array "
"code_L refers to the elements of the column. When characters are "
"displayed, an element in row and one in column are acquired and assigned "
"to the two HC595 chips respectively. Thus a pattern is shown on the LED "
"dot  matrix. Take the first number of code_H, 0x01 and the first number "
"of code_L, 0x00 as examples."
msgstr ""
"配列code_Hはmatix行の要素を表し、配列code_Lは列の要素を表す。文字が表示さ"
"れると、行の要素と列の要素が取得され、それぞれ2つのHC595チップに割り当て"
"られる。したがって、パターンはLEDドットマトリックスに表示される。例とし"
"て、code_Hの最初の数字0x01とcode_Lの最初の数字0x00を取り上げる。"

#: ../1.1.6_led_dot_matrix.rst:351
msgid ""
"In this kit, common anode LED dot matrix is applied, so only the eight "
"LEDs in the eighth row light up. When the conditions that code H is 0xff "
"and code_L is 0x7f are met simultaneously, these 8 LEDs in the first "
"column are lit."
msgstr ""
"このキットでは、アノードコモンLEDドットマトリックスが適用されるため、8行"
"目の8つのLEDのみが点灯する。コードHが0xffで、code_Lが0x7fであるという条件"
"が同時に満たされると、最初の列のこれら8つのLEDが点灯する。"

#: ../1.1.6_led_dot_matrix.rst:362
msgid ""
"In this loop, these 20 elements in the two arrays, code_L and code_H "
"will be uploaded to the HC595 chip one by one."
msgstr ""
"このループでは、2つの配列code_Lおよびcode_Hのこれらの20個の要素が2つの"
"HC595チップに1つずつアップロードされる。"

#: ../1.1.6_led_dot_matrix.rst:365
msgid ""
"If you want to display characters on the LED dot matrix, please refer to "
"a python code: https://github.com/sunfounder/SunFounder_Dot_Matrix"
msgstr ""
"LEDドットマトリックスに文字を表示する場合は、Pythonコードを参照してくださ"
"い：https://github.com/sunfounder/SunFounder_Dot_Matrix"

#: ../1.1.6_led_dot_matrix.rst:368
msgid "Phenomenon Picture"
msgstr "現象画像"
