# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SunFounder
# This file is distributed under the same license as the SunFounder Davinci
# Kit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Davinci Kit\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-20 18:20+0800\n"
"PO-Revision-Date: 2021-05-28 11:19+0800\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja\n"
"X-Generator: Poedit 2.4.3\n"

#: ../3.1.14_game_not_not.rst:2
msgid "3.1.14 GAME– Not Not"
msgstr "3.1.14 ゲーム–Not Not-頭脳耐久ゲーム"

#: ../3.1.14_game_not_not.rst:5
msgid "**Introduction**"
msgstr "**前書き**"

#: ../3.1.14_game_not_not.rst:8
msgid ""
"In this lesson, we will make an interesting game device, and we call it "
"\"Not Not\"."
msgstr "このレッスンでは、面白いゲームデバイスを作成し、「Not Not」と呼ぶ。"

#: ../3.1.14_game_not_not.rst:12
msgid ""
"During the game, the dot matrix will refresh an arrow randomly. What you "
"need to do is to press the button in the opposite direction of the arrow "
"within a limited time. If the time is up, or if the button in the same "
"direction as the arrow is pressed, you are out."
msgstr ""
"ゲーム中、ドットマトリックスは矢印をランダムに更新する。必要なのは、限られた"
"時間内に矢印の反対方向にボタンを押すことである。時間になった場合、または矢印"
"と同じ方向のボタンが押された場合、敗北すると意味する。"

#: ../3.1.14_game_not_not.rst:14
msgid ""
"This game can really practice your reverse thinking, and now shall we have a "
"try?"
msgstr "このゲームは本当にあなたの逆思考を実践することができる。"

#: ../3.1.14_game_not_not.rst:17
msgid "**Components**"
msgstr "**部品**"

#: ../3.1.14_game_not_not.rst:23
msgid "**Schematic Diagram**"
msgstr "**回路図**"

#: ../3.1.14_game_not_not.rst:26
msgid "T-Board Name"
msgstr "Tボード名"

#: ../3.1.14_game_not_not.rst:26
msgid "physical"
msgstr "physical"

#: ../3.1.14_game_not_not.rst:26
msgid "wiringPi"
msgstr "wiringPi"

#: ../3.1.14_game_not_not.rst:26
msgid "BCM"
msgstr "BCM"

#: ../3.1.14_game_not_not.rst:27
msgid "GPIO17"
msgstr "GPIO17"

#: ../3.1.14_game_not_not.rst:27
msgid "Pin 11"
msgstr "Pin 11"

#: ../3.1.14_game_not_not.rst:27
msgid "0"
msgstr "0"

#: ../3.1.14_game_not_not.rst:27
msgid "17"
msgstr "17"

#: ../3.1.14_game_not_not.rst:28
msgid "GPIO18"
msgstr "GPIO18"

#: ../3.1.14_game_not_not.rst:28
msgid "Pin 12"
msgstr "Pin 12"

#: ../3.1.14_game_not_not.rst:28
msgid "1"
msgstr "1"

#: ../3.1.14_game_not_not.rst:28
msgid "18"
msgstr "18"

#: ../3.1.14_game_not_not.rst:29
msgid "GPIO27"
msgstr "GPIO27"

#: ../3.1.14_game_not_not.rst:29
msgid "Pin 13"
msgstr "Pin 13"

#: ../3.1.14_game_not_not.rst:29
msgid "2"
msgstr "2"

#: ../3.1.14_game_not_not.rst:29
msgid "27"
msgstr "27"

#: ../3.1.14_game_not_not.rst:30
msgid "GPIO20"
msgstr "GPIO20"

#: ../3.1.14_game_not_not.rst:30
msgid "Pin 38"
msgstr "Pin 38"

#: ../3.1.14_game_not_not.rst:30
msgid "28"
msgstr "28"

#: ../3.1.14_game_not_not.rst:30
msgid "20"
msgstr "20"

#: ../3.1.14_game_not_not.rst:31
msgid "GPIO26"
msgstr "GPIO26"

#: ../3.1.14_game_not_not.rst:31
msgid "Pin 37"
msgstr "Pin 37"

#: ../3.1.14_game_not_not.rst:31
msgid "25"
msgstr "25"

#: ../3.1.14_game_not_not.rst:31
msgid "26"
msgstr "26"

#: ../3.1.14_game_not_not.rst:38
msgid "**Experimental Procedures**"
msgstr "**実験手順**"

#: ../3.1.14_game_not_not.rst:40
msgid "**Step 1:** Build the circuit."
msgstr "**ステップ1：**回路を作る。"

#: ../3.1.14_game_not_not.rst:47
msgid "**For C Language Users**"
msgstr "**C言語ユーザー向け**"

#: ../3.1.14_game_not_not.rst:49
msgid "**Step 5:** Go to the folder of code."
msgstr "**ステップ5：**コードのフォルダーに移動する。"

#: ../3.1.14_game_not_not.rst:55
msgid "**Step 6**: Compile."
msgstr "**ステップ6：**コンパイルする。"

#: ../3.1.14_game_not_not.rst:61
msgid "**Step 7**: Run."
msgstr "**ステップ7：**実行する。"

#: ../3.1.14_game_not_not.rst:67
msgid ""
"After the program starts, a left or right arrow will be refreshed at random "
"on the dot matrix. What you need to do is to press the button in the "
"opposite direction of the arrow within a limited time. Then “\\ **√**\\ ” "
"appears on the dot matrix. If the time is up, or if the button in the same "
"direction as the arrow is pressed, you are out and the dot matrix displays "
"“x”. You can also add 2 new buttons or replace them with Joystick keys for "
"up, down, left and right— 4 directions to increase the difficulty of the "
"game."
msgstr ""
"プログラムの開始後、ドットマトリックス上の左矢印または右矢印がランダムに更新"
"される。必要なのは、限られた時間内に矢印の反対方向にボタンを押すことである。"
"次に、ドットマトリックスに「**√**」が表示される。時間になった場合、または矢印"
"と同じ方向のボタンが押された場合、敗北すると意味し、ドットマトリックスに「x」"
"が表示される。また、2つの新しいボタンを追加したり、上下左右(4つの方向でゲーム"
"の難易度を上げる)のジョイスティックキーに置き換えたりすることもできる。"

#: ../3.1.14_game_not_not.rst:76 ../3.1.14_game_not_not.rst:302
msgid "**Code Explanation**"
msgstr "**コードの説明**"

#: ../3.1.14_game_not_not.rst:78 ../3.1.14_game_not_not.rst:304
msgid ""
"Based on **1.1.6 LED Dot Matrix**, this lesson adds **2** buttons to make an "
"amusing game device. So, if you are not very familiar with the dot matrix, "
"please refer to **1.1.6 LED Dot Matrix**."
msgstr ""
"**1.1.6 LEDドットマトリックス**、このレッスンでは**2**つのボタンを追加して、"
"面白いゲームデバイスを作成する。したがって、あまりドットマトリックスに詳しく"
"ない場合は、**1.1.6 LEDドットマトリックス**を参照してください。"

#: ../3.1.14_game_not_not.rst:82 ../3.1.14_game_not_not.rst:308
msgid "The whole program process is as below:"
msgstr "プログラム全体のプロセスは次のとおりである："

#: ../3.1.14_game_not_not.rst:84 ../3.1.14_game_not_not.rst:310
msgid "Randomly select an arrow direction and generate **timer 1**."
msgstr "矢印の方向をランダムに選択し、**タイマー1**を生成する。"

#: ../3.1.14_game_not_not.rst:86
msgid "Display the arrow image on the dot matrix."
msgstr "ドットマトリックスに矢印画像を表示する。"

#: ../3.1.14_game_not_not.rst:88 ../3.1.14_game_not_not.rst:314
msgid ""
"Judge the button input. If the button is pressed or **timer 1** reminds "
"time’s up, judgement starts."
msgstr ""
"ボタン入力を判断する。ボタンが押されるか、**タイマー1**が時間切れを想起させる"
"と、判定が開始される。"

#: ../3.1.14_game_not_not.rst:91 ../3.1.14_game_not_not.rst:317
msgid ""
"Display the image on the basis of a judging result; meanwhile, generate "
"**timer 2**."
msgstr "判定結果に基づいて画像を表示する。その間、**タイマー2**を生成する。"

#: ../3.1.14_game_not_not.rst:94 ../3.1.14_game_not_not.rst:320
msgid "Rerun **step 1** when **timer 2** reminds time’s up."
msgstr "**タイマー2**が時間切れを想起させると、**ステップ1**を再実行する。"

#: ../3.1.14_game_not_not.rst:117
msgid ""
"GLYPH structure works like a dictionary: the **word** attribute corresponds "
"to the **key** on the dictionary; the **code** attribute corresponds to the "
"**value**."
msgstr ""
"GLYPH構造はディクショナリのように機能する：**単語**属性はディクショナリのキー"
"に対応し、**コード**属性は**値**に対応する。"

#: ../3.1.14_game_not_not.rst:121
msgid ""
"Here, code is used to store an array for dot matrix to display images (an "
"8x8 bit array)."
msgstr ""
"ここでは、コードを使用して、画像を表示するためのドットマトリックスの配列（8x8"
"ビット配列）を保存する。"

#: ../3.1.14_game_not_not.rst:124
msgid ""
"Here, the array **arrow** can be used to display the arrow pattern in up, "
"down, left and right directions on the LED dot matrix."
msgstr ""
"ここで、配列**矢印**を使用して、矢印パターンを上下左右にLEDドットマトリックス"
"に表示することができる。"

#: ../3.1.14_game_not_not.rst:127
msgid "Now **down** and **up** are commented and uncomment them if needed."
msgstr "**上下**が付注され、必要に応じて解除できる。"

#: ../3.1.14_game_not_not.rst:129
msgid ""
"The array **check** is used to display these two images: ”\\ **×**\\ ” and "
"”\\ **√**\\ ”."
msgstr ""
"配列**チェック**を使用して、これらの2つの画像「**×**」と「**√**」を表示する。"

#: ../3.1.14_game_not_not.rst:143
msgid ""
"The function **lookup()** works by “checking the dictionary”. Define a **key,"
"** search the same words as **key** in the structure **GLYPH \\*glyph** and "
"return the corresponding information— “\\ **code**\\ ” of the certain word."
msgstr ""
"関数**lookup（）**は、「checking the dictionary」によって機能する。**キー**を"
"定義し、構造**GLYPH *glyph**のキーと同じ単語を検索し、対応する情報（特定の単"
"語の「**code**」）を返す。"

#: ../3.1.14_game_not_not.rst:148
msgid ""
"The function **Strcmp()** is used to compare the identity of two character "
"strings **glyph[i].word** and **key**; if the identity is judged, return "
"**glyph[i].code** ( as shown)."
msgstr ""
"関数**Strcmp（）**は、2つの文字列**glyph[i].単語**と**キー**の同一性を比較す"
"るために使用される。同一性が判断された場合、**glyph[i].コード**（示すように）"
"を返す。"

#: ../3.1.14_game_not_not.rst:162 ../3.1.14_game_not_not.rst:372
msgid "Display the specified pattern on the dot matrix."
msgstr "指定したパターンをドットマトリックスに表示する。"

#: ../3.1.14_game_not_not.rst:174 ../3.1.14_game_not_not.rst:385
msgid ""
"The function **createGlyph()** is used to randomly select a direction (the "
"word attribute of an element in the array **arrow[]:** “\\ **left**\\ ”, “\\ "
"**right**\\ ”... ). Set the stage as “PLAY” and start a 2-second alarm clock "
"function."
msgstr ""
"関数**createGlyph（）**を使用して、方向（配列**arrow []**の要素の単語属性：“ "
"**left**”、“** right**” ...）をランダムに選択する。ステージを「PLAY」に設定"
"し、2秒の目覚まし時計機能を開始する。"

#: ../3.1.14_game_not_not.rst:179
msgid ""
"**srand(time(NULL)):** Initializes random seeds that are from the system "
"clock."
msgstr ""
"**srand（time（NULL））：**システムクロックからのランダムシードを初期化する。"

#: ../3.1.14_game_not_not.rst:182
msgid ""
"**(sizeof(arrow)/sizeof(arrow[0]))：**\\ Get the length of the array, the "
"outcome is 2."
msgstr ""
"**(sizeof(arrow)/sizeof(arrow[0]))：**\\配列の長さを取得し、結果は2である。"

#: ../3.1.14_game_not_not.rst:185
msgid ""
"**rand()%2:** The remainder is **0** or **1,** gotten from dividing a "
"generated random number by 2\\ **.**"
msgstr ""
"**rand()%2:**余りは**0**または**1**で、生成された乱数を2で割ったものである。"

#: ../3.1.14_game_not_not.rst:188
msgid "**waypoint=arrow[i].word:** The outcome should be “right” or “left”."
msgstr ""
"**waypoint=arrow[i].単語：**結果は「right」または「left」でなければならない。"

#: ../3.1.14_game_not_not.rst:205
msgid ""
"checkPoint() is used to check the button input; if the button is not pressed "
"or the button in the same direction as the arrow is pressed, the outcome of "
"the waypoint is wrong and “\\ **x**\\ ” appears on the dot matrix. "
"Otherwise, the waypoint is right and dot matrix displays “\\ **√**\\ ”. Here "
"the **stage** is **CHECK,** and there can be set a 1-second alarm clock "
"function."
msgstr ""
"checkPoint（）はボタン入力をチェックするために使用される。ボタンが押されてい"
"ない場合、または矢印と同じ方向のボタンが押されている場合、ウェイポイントの結"
"果はwrongであり、「**x**」がドットマトリックスに表示される。それ以外の場合、"
"ウェイポイントは正しく、ドットマトリックスには「**√**」が表示される。ここで"
"は、ステージが**CHECK**であり、1秒の目覚まし時計機能を設定することはできる。"

#: ../3.1.14_game_not_not.rst:212
msgid ""
"alarm() is also called “alarm clock”, in which a timer can be set, and it "
"sends **SIGALRM** signals to the progress when the defined time is up."
msgstr ""
"alarm（）は「アラームクロック」とも呼ばれ、ここでタイマーを設定でき、"
"**SIGALRM**信号を送信し、定義された時間になったら、進行状況を通知する。"

#: ../3.1.14_game_not_not.rst:225
msgid ""
"getKey() reads the states of the these two buttons; if the right button is "
"pressed, the parameter of the function checkPoint() is **right** and if the "
"left button is pressed, the parameter is **left**."
msgstr ""
"getKey（）はこれら2つのボタンの状態を読み取り、右のボタンが押された場合、"
"checkPoint（）のパラメーターは**right**であり、左ボタンが押された場合、パラ"
"メーターは**left**である。"

#: ../3.1.14_game_not_not.rst:240
msgid ""
"Previously, timer() was called when set as the alarm() time’s up. Then under "
"the “PLAY” mode, checkPoint() is to be called to judge the outcome. If the "
"program is set to “CHECK” mode, the function createGlyph() should be called "
"to select new patterns."
msgstr ""
"以前は、alarm() time ’ s upに設定するときに、timer（）が呼び出された。それか"
"ら「PLAY」モードで、checkPoint（）を呼び出して結果を判断する。プログラムが"
"「CHECK」モードに設定されている場合、関数createGlyph（）を呼び出して新しいパ"
"ターンを選択しなければならない。"

#: ../3.1.14_game_not_not.rst:267
msgid ""
"The working of the function signal(SIGALRM,timer): calling the timer() "
"function when a SIGALRM signal (generated by the alarm clock function "
"alarm()) is received."
msgstr ""
"関数signal（SIGALRM、timer）の動作：（目覚まし時計関数alarm（）によって生成さ"
"れた）SIGALRM信号を受信したときに関数timer（）を呼び出す。"

#: ../3.1.14_game_not_not.rst:271 ../3.1.14_game_not_not.rst:335
msgid ""
"When the program starts, call createGlyph() one time at first and then start "
"the loop."
msgstr ""
"プログラムが開始したら、まずcreateGlyph（）を1回呼び出してから、loopを開始す"
"る。"

#: ../3.1.14_game_not_not.rst:274 ../3.1.14_game_not_not.rst:338
msgid ""
"In the loop: under PLAY mode, the dot matrix displays arrow patterns and "
"check the button state; if under CHECK mode, what is displayed is “\\ **x**"
"\\ ” or “\\ **√**\\ ”."
msgstr ""
"In the loop：PLAYモードでは、ドットマトリックスに矢印パターンが表示され、ボタ"
"ンの状態が確認される。CHECKモードの場合、表示されるのは「**x**」または"
"「**√**」である。"

#: ../3.1.14_game_not_not.rst:279
msgid "**For Python Language Users**"
msgstr "**Python言語ユーザー向け**"

#: ../3.1.14_game_not_not.rst:281
msgid "**Step 5**: Get into the folder of code."
msgstr "**ステップ5：**コードのフォルダーに入る。"

#: ../3.1.14_game_not_not.rst:287
msgid "**Step 6**: Run."
msgstr "**ステップ6：**実行する。"

#: ../3.1.14_game_not_not.rst:293
msgid ""
"After starting the program, on the dot matrix appears an arrow pointing to "
"the right or the left. What you need to do is to press the button in the "
"opposite direction of the arrow within a limited time. Then “\\ **√**\\ ” "
"appears on the dot matrix. If the time is up, or if the button in the same "
"direction as the arrow is pressed, you are out and the dot matrix displays "
"“x”. You can also add 2 new buttons or replace them with Joystick keys for "
"up, down, left and right— 4 directions to increase the difficulty of the "
"game."
msgstr ""
"プログラムを開始すると、ドットマトリックスに右または左を指す矢印が表示され"
"る。必要なのは、限られた時間内に矢印の反対方向にボタンを押すことである。次"
"に、ドットマトリックスに「 **√**」が表示される。時間になった場合、または矢印"
"と同じ方向のボタンが押された場合、敗北すると意味し、ドットマトリックスに「x」"
"が表示される。また、2つの新しいボタンを追加したり、上下左右(4つの方向でゲーム"
"の難易度を上げる)のジョイスティックキーに置き換えたりすることもできる。"

#: ../3.1.14_game_not_not.rst:312
msgid "Display the corresponding arrow image on the dot matrix."
msgstr "ドットマトリックスに対応する矢印画像を表示する。"

#: ../3.1.14_game_not_not.rst:333
msgid "Main() contains the whole running process."
msgstr "Main（）には実行中のプロセス全体が含まれている。"

#: ../3.1.14_game_not_not.rst:355
msgid ""
"Here, the **dictionary** arrow can be used to display the arrow pattern in "
"up, down, left and right directions on the LED dot matrix."
msgstr ""
"ここでは、**ディクショナリ**の矢印を使用して、LEDドットマトリックス上に矢印パ"
"ターンを上下左右に表示できる。"

#: ../3.1.14_game_not_not.rst:358
msgid "Now down and up are commented and uncomment them if needed."
msgstr "上下が付注され、必要に応じて解除できる。"

#: ../3.1.14_game_not_not.rst:360
msgid ""
"The **dictionary** check is used to display these two images: ”\\ **×**\\ ” "
"and ”\\ **√**\\ ”."
msgstr ""
"**ディクショナリ**チェックを使用して、これらの2つの画像「**×**」と「**√**」を"
"表示する。"

#: ../3.1.14_game_not_not.rst:390
msgid "**arrow.keys():** Select the keys “right”and “left” in the arrow array."
msgstr "**arrow.keys():** 矢印配列のキー「右」と「左」を選択する。"

#: ../3.1.14_game_not_not.rst:392
msgid "l\\ **ist(arrow.keys()):** Combine these keys into an array."
msgstr "、**list(arrow.keys（））：**これらのキーを配列に結合する。"

#: ../3.1.14_game_not_not.rst:394
msgid ""
"**random.choice(list(arrow.keys())):** Randomly select an element in the "
"array."
msgstr ""
"**random.choice(list(arrow.keys（）））：**配列内の要素をランダムに選択する。"

#: ../3.1.14_game_not_not.rst:397
msgid ""
"So, The outcome of **waypoint=random.choice(list(arrow.keys()))** should be "
"“right” or “left”."
msgstr ""
"したがって、**waypoint = randomchoice(list(arrow.keys（）））**の結果が出す。"
"は、「右」または「左」でなければならない。"

#: ../3.1.14_game_not_not.rst:415
msgid "checkPoint() is to detect the current state of button input:"
msgstr "checkPoint（）はボタン入力の現在の状態を検出する："

#: ../3.1.14_game_not_not.rst:417
msgid ""
"If no button is pressed or the button in the same direction as the the arrow "
"is pressed, the assigned value of the **waypoint** is **wrong** and there "
"displays “\\ **x**\\ ” on the dot matrix."
msgstr ""
"ボタンが押されていない場合、または矢印と同じ方向のボタンが押されている場合、"
"**ウェイポイント**に割り当てられた値は**wrong**であり、ドットマトリックスに"
"「**x**」が表示される。"

#: ../3.1.14_game_not_not.rst:421
msgid "Otherwise, the waypoint is right and “\\ **√**\\ ” appears."
msgstr "それ以外の場合、ウェイポイントは正しく、「**√**」が表示される。"

#: ../3.1.14_game_not_not.rst:423
msgid ""
"Now the stage is **CHECK** and start a 1-second timer **timerCheck** to call "
"the function creatGlyph() in a second."
msgstr ""
"これでステージは**CHECK**になり、1秒のタイマー**timerCheck**を開始して関数"
"creatGlyph（）を1秒以内呼び出す。"

#: ../3.1.14_game_not_not.rst:431
msgid ""
"In the function timeout(), set the parameter of checkPoint() as ”\\ **empty**"
"\\ ”."
msgstr ""
"関数timeout（）で、checkPoint（）のパラメーターを「**empty**」に設定する。"

#: ../3.1.14_game_not_not.rst:442
msgid ""
"getKey() reads the state of these two buttons, and if the right button is "
"pressed, the parameter of checkPoint() is **right**; if the left button is "
"pressed, the parameter is **left**."
msgstr ""
"getKey（）はこれら2つのボタンの状態を読み取り、右のボタンが押された場合、"
"checkPoint（）のパラメーターは**right**であり、左ボタンが押された場合、パラ"
"メーターは**left**である。"

#: ../3.1.14_game_not_not.rst:447
msgid "**Phenomenon Picture**"
msgstr "**現象画像**"
